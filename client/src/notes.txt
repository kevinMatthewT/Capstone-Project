app.get("/api/get/investment/Date_Of_Ownership/filter/:filtername", async (req, res, next) => {
    try {
        const filtername = req.params.filtername;

        // Parse date manually using JavaScript Date
        const [day, month, year] = filtername.split("-"); // Assuming "DD-MM-YYYY" format
        const filterDate = new Date(year, month - 1, day); // Month is 0-based

        // Debug logs
        console.log('Raw filtername:', filtername);
        console.log('Parsed filterDate:', filterDate);
        console.log('Is valid date?', !isNaN(filterDate));

        // Check if the date is valid
        if (isNaN(filterDate)) {
            return res.status(400).json({ error: 'Invalid date format' });
        }

        // Query MongoDB for documents with Date_Of_Ownership >= filterDate
        const allInvestments = await InvestorSchema_1.default.find({
            Date_Of_Ownership: { $gte: filterDate },
        });

        res.status(200).json(allInvestments);
    } catch (error) {
        console.error(error);
        next(res.status(500).json({ error: "Error fetching investments" }));
    }
});
app.get("/api/get/investment/filter/:filter", async (req, res) => {
    const filter = req.params.filter;
    let startDate, endDate;

    switch (filter) {
        case 'this_month':
            startDate = new Date(new Date().getFullYear(), new Date().getMonth(), 1);
            endDate = new Date();
            break;
        case 'last_month':
            const lastMonthDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1);
            startDate = lastMonthDate;
            endDate = new Date(new Date().getFullYear(), new Date().getMonth(), 0);
            break;
        case 'last_90_days':
            startDate = new Date(new Date().setDate(new Date().getDate() - 90));
            endDate = new Date();
            break;
        default:
            return res.status(400).json({ error: 'Invalid filter' });
    }

    const investments = await InvestorSchema_1.default.find({
        Date_Of_Ownership: { $gte: startDate, $lte: endDate },
    });

    res.status(200).json(investments);
});